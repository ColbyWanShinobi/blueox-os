name: bluebuild
on:
  schedule:
    - cron: "00 06 * * *" # build at 06:00 UTC every day
                          # (20 minutes after last ublue images start building)
  push:
    paths-ignore: # don't rebuild if only documentation has changed
      - "**.md"

  pull_request:
  workflow_dispatch: # allow manually triggering builds
jobs:
  bluebuild:
    name: Build Custom Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false # stop GH from cancelling all matrix builds if one fails
      matrix:
        recipe:
          # !! Add your recipes here
          # - kde-recipe.yml
          #- gnome-recipe.yml
          #- kde-nvidia-recipe.yml
          #- gnome-nvidia-recipe.yml
          # - redux.yml
          - blueox.yml
          #- blueox-41.yml
    steps:
       # the build is fully handled by the reusable github action
      - name: Build Custom Image
        id: build-image
        uses: blue-build/github-action@v1.9
        with:
          recipe: ${{ matrix.recipe }}
          cosign_private_key: ${{ secrets.SIGNING_SECRET }}
          registry_token: ${{ github.token }}
          pr_event_number: ${{ github.event.number }}

          # enabled by default, disable if your image is small and you want faster builds
          maximize_build_space: true
      - name: Display Built Images
        run: |
          echo "=> Finished building:"
          # BlueBuild typically creates these tags based on the registry and namespace
          REGISTRY="ghcr.io"
          NAMESPACE="${{ github.repository_owner }}"
          NAMESPACE=$(echo "$NAMESPACE" | tr '[:upper:]' '[:lower:]')
          REPO_NAME="blueox-os"
          DATE_TAG=$(date +%Y%m%d)
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          
          echo "	- ${REGISTRY}/${NAMESPACE}/${REPO_NAME}:latest"
          echo "	- ${REGISTRY}/${NAMESPACE}/${REPO_NAME}:${DATE_TAG}"
          echo "	- ${REGISTRY}/${NAMESPACE}/${REPO_NAME}:42"
          echo "	- ${REGISTRY}/${NAMESPACE}/${REPO_NAME}:${DATE_TAG}-42"
          echo "	- ${REGISTRY}/${NAMESPACE}/${REPO_NAME}:${SHORT_SHA}-42"
          echo ""
          echo "=> Available rebase commands:"
          echo "	rpm-ostree rebase ostree-image-signed:docker://${REGISTRY}/${NAMESPACE}/${REPO_NAME}:latest"
          echo "	rpm-ostree rebase ostree-image-signed:docker://${REGISTRY}/${NAMESPACE}/${REPO_NAME}:${DATE_TAG}"
          echo "	rpm-ostree rebase ostree-image-signed:docker://${REGISTRY}/${NAMESPACE}/${REPO_NAME}:42"
          echo "	rpm-ostree rebase ostree-image-signed:docker://${REGISTRY}/${NAMESPACE}/${REPO_NAME}:${DATE_TAG}-42"
          echo "	rpm-ostree rebase ostree-image-signed:docker://${REGISTRY}/${NAMESPACE}/${REPO_NAME}:${SHORT_SHA}-42"
      - name: Debug outputs
        run: |
          echo "${{ toJson(steps.build-image.outputs) }}"
